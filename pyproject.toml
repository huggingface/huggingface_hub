[tool.mypy]
ignore_missing_imports = true

[tool.ty]
[tool.ty.terminal]
# Do not fail CI on warnings; keep output readable
error-on-warning = false
output-format = "concise"

[tool.ty.rules]
# Minimize noise from optional/extra dependencies not installed in CI or local
unresolved-import = "ignore"
unresolved-attribute = "ignore"

# Be tolerant with framework/typing edge-cases and runtime-validated code paths
unsupported-base = "ignore"
possibly-unbound-attribute = "ignore"
unsupported-operator = "ignore"
non-subscriptable = "ignore"
call-non-callable = "ignore"

# Loosen strictness a bit on type matching
missing-argument = "ignore"
deprecated = "ignore"

[tool.pytest.ini_options]
# Add the specified `OPTS` to the set of command line arguments as if they had
# been specified by the user.
addopts = "-Werror::FutureWarning --log-cli-level=INFO -sv --durations=0"
# The defined variables will be added to the environment before any tests are
# run, part of pytest-env plugin
env = [
    "DISABLE_SYMLINKS_IN_WINDOWS_TESTS=1",
    "HF_TOKEN=",
    "HUGGINGFACE_CO_STAGING=1",
    "HUGGING_FACE_HUB_TOKEN=",
]

[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".venv*",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]
line-length = 119
# Ignored rules:
# "E501" -> line length violation
lint.ignore = ["E501"]
lint.select = ["E", "F", "I", "W"]

[tool.ruff.lint.isort]
known-first-party = ["huggingface_hub"]
lines-after-imports = 2

[tool.tomlsort]
all = true
in_place = true
spaces_before_inline_comment = 2  # Match Python PEP 8
spaces_indent_inline_array = 4  # Match Python PEP 8
trailing_comma_inline_array = true
